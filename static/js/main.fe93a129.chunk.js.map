{"version":3,"sources":["components/TodoTemplete.js","TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","initialTodos","todoReducer","state","action","type","concat","todo","map","id","done","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","Remove","CheckCircle","props","css","Text","TodoItemBlock","TodoItem","text","onClick","React","memo","TodoListBlock","TodoList","todos","CircleButton","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","placeholder","autoFocus","onChange","target","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe93a129.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from 'styled-components';\n\nconst TodoTemplateBlock = styled.div`\n    width : 512px;\n    height : 768px;\n\n    position : relative;\n    background : white;\n    border-radius: 16px;\n    box-shadow : 0 0 8px rgba(0,0,0,0.04);\n\n    margin : 0 auto;\n\n    margin-top : 96px;\n    margin-bottom : 32px;\n\n    display: flex;\n    flex-direction: column;\n`;\n\nfunction TodoTemplate( { children }) {\n    return (\n        <TodoTemplateBlock>{children}</TodoTemplateBlock>\n    )\n}\n\nexport default TodoTemplate;","import React, { useReducer, createContext, useContext, useRef } from 'react';\n\nconst initialTodos = [\n    // {\n    //     id: 1,\n    //     text: '프로젝트 생성하기',\n    //     done: true\n    // },\n    // {\n    //     id: 2,\n    //     text: '컴포넌트 스타일링하기\u001c',\n    //     done: true\n    // },\n    // {\n    //     id: 3,\n    //     text: 'Context 만들기',\n    //     done: false\n    // },\n    // {\n    //     id: 4,\n    //     text: '기능 구현하기',\n    //     done: false\n    // }\n];\n\nfunction todoReducer(state, action) {\n    switch (action.type) {\n        case 'CREATE':\n            return state.concat(action.todo);\n        case 'TOGGLE':\n            return state.map(\n                todo => todo.id === action.id ? { ...todo, done: !todo.done } : todo\n            );\n        case 'REMOVE':\n            return state.filter(\n                todo => todo.id !== action.id\n            );\n        default:\n            throw new Error(`Unhandled action type: ${action.type}`);\n    }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport function TodoProvider({children}) {\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\n    const nextId = useRef(5);\n\n    return (\n        <TodoStateContext.Provider value={state}>\n            <TodoDispatchContext.Provider value={dispatch}>\n                <TodoNextIdContext.Provider value={nextId}>\n                {children}\n                </TodoNextIdContext.Provider>\n            </TodoDispatchContext.Provider>\n        </TodoStateContext.Provider>\n    ); \n}\n\nexport function useTodoState() {\n    const context = useContext(TodoStateContext);\n    if(!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context; \n}\n\nexport function useTodoDispatch() {\n    const context = useContext(TodoDispatchContext);\n    if(!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context; ;\n}\n\nexport function useTodoNextId() {\n    const context = useContext(TodoNextIdContext);\n    if(!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context; \n}","import React from 'react';\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext';\n\nconst TodoHeadBlock = styled.div`\n    padding-top : 48px;\n    padding-left : 32px;\n    padding-right : 32px;\n    padding-bottom : 24px;\n    border-bottom: 1px solid #e9ecef;\n\n    h1 {\n        margin: 0;\n        font-size: 36px;\n        color: #343a40;\n    }\n\n    .day {\n        margin-top: 4px;\n        color: #868e96;\n        font-size: 21px;\n    }\n\n    .tasks-left { \n        color: #ff8787;\n        font-size: 18px;\n        margin-top: 40px;\n        font-weight: bold;\n    }\n`;\n\n\n\nfunction TodoHead() {\n    const todos = useTodoState();\n    const undoneTasks = todos.filter(todo => !todo.done);\n    const today = new Date();\n    const dateString = today.toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    });\n    const dayName = today.toLocaleDateString('ko-KR', {\n        weekday: 'long'\n    });\n\n    return(\n        <TodoHeadBlock>\n            <h1>{dateString}</h1>\n            <div className=\"day\">{dayName}</div>\n            <div className=\"tasks-left\">할일 {undoneTasks.length}개 남음</div>\n        </TodoHeadBlock>\n    );\n}\n\nexport default TodoHead;","import  React from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdDone, MdDelete } from 'react-icons/md';\nimport { useTodoDispatch } from '../TodoContext';\n\n\nconst Remove = styled.div`\n    opacity: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #dee2e6;\n    font-size: 24px;\n    cursor: pointer;\n    &:hover {\n        color: #ff6b6b;\n    }\n`;\nconst CheckCircle = styled.div`\n    width: 32px;\n    height: 32px;\n    border-radius: 16px;\n    border: 1px solid #ced4da;\n    font-size: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 20px;\n    cursor: pointer;\n    ${props => props.done && css`\n        border: 1px solid #38d9a9;\n        color: #38d9a9;\n    `}\n`;\nconst Text = styled.div`\n    flex: 1;\n    font-size: 20px;\n    color: #495057;\n    ${props => props.done && css`\n        color: #ced4da;\n    `}\n`;\nconst TodoItemBlock = styled.div`\n    display: flex;\n    align-items: center;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    &:hover{\n        ${Remove} {\n            opacity: 1;\n        }\n    }\n`;\n\nfunction TodoItem({id, done, text}) {\n    const dispatch = useTodoDispatch();\n    const onToggle =  () =>\n        dispatch({\n            type: 'TOGGLE',\n            id\n        });\n    const onRemove = () =>\n        dispatch({\n            type: 'REMOVE',\n            id\n        });\n\n    return (\n        <TodoItemBlock>\n            <CheckCircle done={done} onClick={onToggle}>\n                {done && <MdDone />}\n            </CheckCircle>\n            <Text done={done}>\n                {text}\n            </Text>\n            <Remove onClick={onRemove}>\n                <MdDelete />\n            </Remove>\n        </TodoItemBlock>\n    );\n}\n\nexport default React.memo(TodoItem);","import React from 'react';\nimport styled from 'styled-components';\nimport TodoItem from './TodoItem';\nimport { useTodoState } from '../TodoContext';\n\nconst TodoListBlock = styled.div`\n    flex: 1;\n    padding: 20px 32px;\n    padding-bottom: 48px;\n    overflow-y: auto;\n`;\n\nfunction TodoList() {\n    const todos = useTodoState();\n    \n    return (\n        <TodoListBlock>\n            {todos.map(todo => (\n                <TodoItem\n                    key={todo.id}\n                    id={todo.id}\n                    text={todo.text}\n                    done={todo.done}\n                />\n            ))}\n        </TodoListBlock>\n    );\n}\n\nexport default TodoList;","import React, {useState} from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd} from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\n\nconst CircleButton = styled.div`\n    background: #38d9a9;\n    &:hover{\n        background: #63e6be;\n    }\n    &:active{\n        background: #20c997;\n    }\n\n    z-index:5;\n    cursor: pointer;\n    width: 80px;\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    left: 50%;\n    bottom: 0px;\n    transform: translate(-50%, 50%);\n\n    font-size: 60px;\n    color: white;\n    border-radius: 40px;\n\n    border: none;\n    outline: none;\n\n    transition: 0.125s all ease-in;\n    ${props => props.open && css`\n        background: #ff6b6b;\n        &:hover{\n            background: #ff8787;\n        }\n        &:active{\n            background: #fa5252;\n        }\n        transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    position: absolute;\n`;\n\nconst InsertForm = styled.form`\n    background: #f8f9fa;\n    padding: 32px;\n    padding-bottom: 72px;\n    border-bottom-left-radius: 16px;\n    border-bottom-right-radius: 16px;\n    border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n    padding: 12px;\n    border-radius: 4px;\n    border: 1px solid #dee2e6;\n    width: 100%;\n    outline: none;\n    font-size: 18px;\n    box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n    const [ open, setOpen] = useState(false);\n    const [ value,setValue] = useState('');\n    \n    const dispatch = useTodoDispatch();\n    const nextId = useTodoNextId();\n\n\n    const onToggle = () => setOpen(!open);\n    const onChange = e => setValue(e.target.value);\n    const onSubmit = e => {\n        e.preventDefault();\n        dispatch({\n            type: 'CREATE',\n            todo: {\n                id: nextId.current,\n                text: value,\n                done:false\n            }\n        });\n        setValue('');\n        setOpen(false);\n        nextId.current += 1;\n    };\n\n\n    return(\n        <> \n        {open && (\n        <InsertFormPositioner>\n            <InsertForm onSubmit={onSubmit}>\n                <Input \n                    placeholder=\"할 일을 입력 후, Enter 를 누르세요\" \n                    autoFocus \n                    onChange={onChange}\n                    value={value}    \n                />\n            </InsertForm>\n        </InsertFormPositioner>\n        )}\n        <CircleButton onClick={onToggle} open={open}>\n            <MdAdd />\n        </CircleButton>\n        </>\n    )\n}\n\nexport default React.memo(TodoCreate);","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport TodoTemplate from './components/TodoTemplete';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList'\nimport TodoCreate from './components/TodoCreate';\nimport { TodoProvider } from './TodoContext';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background : #e9ecef;\n  }\n`;\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n        <TodoCreate />\n      </TodoTemplate>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}